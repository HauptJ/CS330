% family DB, with basic rules for parent, grandather, etc
% could be extended to include sister, cousin, uncle, etc

%grandfather(don,who).
father(don,ted).
father(don,barb).
father(don,paula).
father(greg,erin).
father(greg,austin).
father(wes,alyssa).
father(ted,jessica).
father(ted,david).
%mother(ted, john).

mother(audrey,ted).
mother(audrey,barb).
mother(audrey,paula).
mother(paula,erin).
mother(paula,austin).
mother(barb,alyssa).

%spouse
married(don,audrey).
married(wes,barb).
married(greg,paula).

male(don).
male(ted).
male(wes).
male(greg).
male(austin).
male(david).

female(audrey).
female(barb).
female(paula).
female(alyssa).
female(jessica).
female(erin).

parent(X,Y) :-
	father(X,Y); mother(X,Y).

grandfather(X,Y) :-
	father(X,Z), parent(Z,Y).


samefather(X,Y) :-
	father(F,X),father(F,Y).

samemother(X,Y) :-
	mother(M,X),mother(M,Y).

sibling(X,Y)	:- parent(Z,X), parent(Z,Y), not(X=Y).

% X is the child of Y if Y is the parent of X
child(X,Y)	:- parent(Y,X). % ok

son(X,Y) :- male(X), child(X,Y).

%a failed attempt at nephew, but I can use this!
%uncle(X,Y)		:- son(X,Z), brother(Y,Z); son(X,Z), sister(Y,Z), brother(Y,Z).
uncle(X,Y)		:- brother(X,Z), child(Y,Z).

sameparent(X,Y) :- samefather(X,Y).
sameparent(X,Y) :- samemother(X,Y), not(samefather(X,Y)).

brother(X,Y) 	:- male(X), sameparent(X,Y), not(X=Y).

couple(X,Y)   :- married(X,Y); married(Y,X).

sister(X,Y) 	:- female(X), sameparent(X,Y), not(X=Y).

aunt(X,Y)			:- sister(X,Z), child(Y,Z).

nephew(X,Y)		:- male(X), aunt(Y,X); male(X), uncle(Y,X).
nephew(X,Y)		:- write('Other relational method'),nl,fail.
nephew(X,Y)		:- male(X), parent(Z,X), sibling(Y,Z).
%nephew(X,Y)		:- brother(Z,Y), son(X,Z); sister(Z,Y), son(X,Z).
